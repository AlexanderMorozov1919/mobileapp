basePath: /
definitions:
  models.Doctor:
    description: Medical professional information
    properties:
      created_at:
        type: string
      first_name:
        type: string
      id:
        type: integer
      last_name:
        type: string
      login:
        type: string
      middle_name:
        type: string
      password_hash:
        type: string
      specialization:
        type: string
      updated_at:
        type: string
    type: object
  models.DoctorRegisterRequest:
    description: Doctor registration structure
    properties:
      first_name:
        type: string
      last_name:
        type: string
      login:
        type: string
      middle_name:
        type: string
      password:
        type: string
      specialization:
        type: string
    required:
    - first_name
    - last_name
    - login
    - password
    - specialization
    type: object
  models.LoginRequest:
    properties:
      login:
        type: string
      password:
        type: string
    required:
    - login
    - password
    type: object
  models.TokenPair:
    properties:
      access_token:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: your@email.com
    name: API Support
  description: This is a sample server for mobile application.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: MobileApp API
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Аутентификация доктора
      parameters:
      - description: Данные для входа
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TokenPair'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Вход в систему
      tags:
      - auth
  /register:
    post:
      consumes:
      - application/json
      description: Регистрация нового доктора в системе
      parameters:
      - description: Данные для регистрации
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.DoctorRegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Doctor'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Регистрация доктора
      tags:
      - auth
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
