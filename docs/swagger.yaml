basePath: /api/v1
definitions:
  entities.Allergy:
    properties:
      created_at:
        type: string
      id:
        type: integer
      name:
        example: Пенициллин
        type: string
      patient:
        items:
          $ref: '#/definitions/entities.Patient'
        type: array
      updated_at:
        type: string
    type: object
  entities.ContactInfo:
    properties:
      address:
        type: string
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      phone:
        type: string
      updated_at:
        type: string
    type: object
  entities.Doctor:
    properties:
      created_at:
        type: string
      emergency_calls:
        items:
          $ref: '#/definitions/entities.EmergencyCall'
        type: array
      id:
        type: integer
      login:
        example: doctor_ivanov
        type: string
      receptions:
        items:
          $ref: '#/definitions/entities.ReceptionHospital'
        type: array
      specialization:
        $ref: '#/definitions/entities.Specialization'
      updated_at:
        type: string
    type: object
  entities.EmergencyCall:
    properties:
      address:
        example: "+79991234567"
        type: string
      created_at:
        type: string
      doctor_id:
        example: 1
        type: integer
      id:
        type: integer
      phone:
        example: "+79991234567"
        type: string
      priority:
        example: 1
        type: integer
      receptions:
        items:
          $ref: '#/definitions/entities.ReceptionSMP'
        type: array
      type:
        example: true
        type: boolean
      updated_at:
        type: string
    type: object
  entities.MedService:
    properties:
      id:
        type: integer
      name:
        example: EKG
        type: string
      price:
        example: 100
        type: integer
    type: object
  entities.Patient:
    properties:
      allergy:
        items:
          $ref: '#/definitions/entities.Allergy'
        type: array
      birth_date:
        example: "1980-05-15T00:00:00Z"
        type: string
      contact_info:
        $ref: '#/definitions/entities.ContactInfo'
      created_at:
        type: string
      emergency_receptions:
        items:
          $ref: '#/definitions/entities.ReceptionSMP'
        type: array
      full_name:
        example: Смирнов Алексей Петрович
        type: string
      id:
        type: integer
      is_male:
        example: true
        type: boolean
      on_treatment:
        example: false
        type: boolean
      personal_info:
        $ref: '#/definitions/entities.PersonalInfo'
      receptions:
        items:
          $ref: '#/definitions/entities.ReceptionHospital'
        type: array
      updated_at:
        type: string
    type: object
  entities.PersonalInfo:
    properties:
      created_at:
        type: string
      id:
        type: integer
      oms:
        example: "1234567890123456"
        type: string
      passport_series:
        example: 4510 123456
        type: string
      patient_id:
        example: 1
        type: integer
      snils:
        example: 123-456-789 00
        type: string
      updated_at:
        type: string
    type: object
  entities.ReceptionHospital:
    properties:
      address:
        example: Москва, ул. Ленина, д. 15
        type: string
      created_at:
        type: string
      date:
        example: "2023-10-15T14:30:00Z"
        type: string
      diagnosis:
        example: ОРВИ
        type: string
      doctor_id:
        example: 1
        type: integer
      id:
        type: integer
      patient_id:
        example: 1
        type: integer
      recommendations:
        example: Постельный режим
        type: string
      specialization_data:
        description: Специализированные данные
        type: object
      specialization_data_decoded: {}
      status:
        allOf:
        - $ref: '#/definitions/entities.ReceptionStatus'
        example: scheduled
      updated_at:
        type: string
    type: object
  entities.ReceptionSMP:
    properties:
      created_at:
        type: string
      diagnosis:
        example: ОРВИ
        type: string
      doctor_id:
        example: 1
        type: integer
      emergency_call_id:
        example: 1
        type: integer
      id:
        type: integer
      med_services:
        items:
          $ref: '#/definitions/entities.MedService'
        type: array
      patient_id:
        example: 1
        type: integer
      recommendations:
        example: Постельный режим
        type: string
      specialization_data:
        description: Специализированные данные
        type: object
      specialization_data_decoded: {}
      updated_at:
        type: string
    type: object
  entities.ReceptionStatus:
    enum:
    - scheduled
    - completed
    - cancelled
    - no_show
    type: string
    x-enum-varnames:
    - StatusScheduled
    - StatusCompleted
    - StatusCancelled
    - StatusNoShow
  entities.Specialization:
    properties:
      id:
        type: integer
      title:
        example: Терапевт
        type: string
    type: object
  handlers.IncorrectDataError:
    properties:
      response:
        properties:
          code:
            example: 401
            type: integer
          message:
            example: Некорректные данные
            type: string
        type: object
      status:
        description: error
        example: IncorrectDataError
        type: string
    type: object
  handlers.IncorrectFormatError:
    properties:
      response:
        properties:
          code:
            example: 400
            type: integer
          message:
            example: Неверный формат запроса
            type: string
        type: object
      status:
        description: error
        example: IncorrectFormatError
        type: string
    type: object
  handlers.InternalServerError:
    properties:
      response:
        properties:
          code:
            example: 500
            type: integer
          message:
            example: Внутренняя ошибка сервера
            type: string
        type: object
      status:
        description: error
        example: InternalServerError
        type: string
    type: object
  handlers.NotFoundError:
    properties:
      response:
        properties:
          code:
            example: 404
            type: integer
          message:
            example: Данные не найдены
            type: string
        type: object
      status:
        description: error
        example: NotFoundError
        type: string
    type: object
  handlers.ResultResponse:
    properties:
      response:
        properties:
          data:
            description: '[AVALIABLE]: object, array of objects, empty'
          message:
            example: Success operation
            type: string
          type:
            description: '[AVALIABLE]: object, array, empty'
            example: object
            type: string
        type: object
      status:
        description: ok
        example: ok
        type: string
    type: object
  handlers.ValidationError:
    properties:
      response:
        properties:
          code:
            example: 422
            type: integer
          message:
            example: Ошибка валидации
            type: string
        type: object
      status:
        description: error
        example: ValidationError
        type: string
    type: object
  models.AllergyResponse:
    description: Ответ с названием аллергии
    properties:
      name:
        description: Только название аллергии
        example: Пыльца
        type: string
    type: object
  models.ContactInfoData:
    properties:
      address:
        example: г. Москва, ул. Ленина, д. 10
        type: string
      email:
        example: user@example.com
        type: string
      phone:
        example: "+79991234567"
        type: string
    type: object
  models.ContactInfoResponse:
    description: Контактная информация пациента
    properties:
      address:
        description: Физический адрес
        example: Москва, ул. Пушкина, д. 10
        type: string
      email:
        description: Электронная почта
        example: patient@example.com
        type: string
      phone:
        description: Номер телефона
        example: "+79991234567"
        type: string
    type: object
  models.CreateEmergencyRequest:
    properties:
      doctor_id:
        example: 1
        type: integer
      emergency_call_id:
        example: 1
        type: integer
      patient:
        $ref: '#/definitions/models.PatientData'
      patient_id:
        example: 1
        type: integer
    required:
    - doctor_id
    - emergency_call_id
    type: object
  models.CreatePatientRequest:
    description: Данные для создания нового пациента
    properties:
      birth_date:
        description: Дата рождения
        example: "1980-05-15"
        type: string
      full_name:
        description: ФИО пациента
        example: Смирнов Алексей Петрович
        type: string
      is_male:
        description: Пол (true - мужской)
        example: true
        type: boolean
    type: object
  models.DoctorAuthResponse:
    description: Ответ с данными авторизованного врача
    properties:
      id:
        description: ID врача
        example: 1
        type: integer
      token:
        description: JWT токен
        example: eyJhbGciOi...
        type: string
    type: object
  models.DoctorInfoResponse:
    properties:
      full_name:
        description: Полное имя врача
        example: Иванов Иван Иванович
        type: string
      specialization:
        $ref: '#/definitions/entities.Specialization'
    type: object
  models.DoctorLoginRequest:
    description: Запрос для входа врача в систему
    properties:
      password:
        description: Пароль
        example: "123"
        type: string
      username:
        description: Логин (телефон)
        example: doctor_ivanov
        type: string
    required:
    - password
    - username
    type: object
  models.MedCardResponse:
    description: Содержит всю медицинскую информацию о пациенте
    properties:
      allergy:
        description: Список аллергий
        items:
          $ref: '#/definitions/models.AllergyResponse'
        type: array
      contact_info:
        allOf:
        - $ref: '#/definitions/models.ContactInfoResponse'
        description: Контактные данные
      patient:
        allOf:
        - $ref: '#/definitions/models.ShortPatientResponse'
        description: Основные данные пациента
      personal_info:
        allOf:
        - $ref: '#/definitions/models.PersonalInfoResponse'
        description: Персональная информация
    type: object
  models.MedServicesListResponse:
    properties:
      hits:
        items:
          $ref: '#/definitions/models.MedServicesResponse'
        type: array
      totalHits:
        type: integer
    type: object
  models.MedServicesResponse:
    properties:
      id:
        type: integer
      name:
        example: EKG
        type: string
      price:
        example: 100
        type: integer
    type: object
  models.PatientData:
    properties:
      birth_date:
        example: "1980-05-15T00:00:00Z"
        type: string
      contact_info:
        allOf:
        - $ref: '#/definitions/models.ContactInfoData'
        description: Опциональные контактные данные
      full_name:
        example: Иванов Иван Иванович
        type: string
      is_male:
        example: true
        type: boolean
    type: object
  models.PersonalInfoResponse:
    description: Документы и идентификационные данные пациента
    properties:
      oms:
        description: Номер полиса ОМС
        example: "1234567890123456"
        type: string
      passport_series:
        description: Серия и номер паспорта
        example: 4510 123456
        type: string
      snils:
        description: Номер СНИЛС
        example: 123-456-789 00
        type: string
    type: object
  models.ReceptionHospitalListResponse:
    properties:
      currentPage:
        type: integer
      hits:
        items:
          $ref: '#/definitions/models.ReceptionHospitalResponse'
        type: array
      hitsPerPage:
        type: integer
      totalHits:
        type: integer
      totalPages:
        type: integer
    type: object
  models.ReceptionHospitalResponse:
    properties:
      date:
        example: "2023-10-15T14:30:00Z"
        type: string
      diagnosis:
        example: ОРВИ
        type: string
      doctor:
        $ref: '#/definitions/models.DoctorInfoResponse'
      patient:
        $ref: '#/definitions/models.ShortPatientResponse'
      recommendations:
        example: Постельный режим
        type: string
    type: object
  models.ShortPatientResponse:
    description: Сокращенные данные пациента
    properties:
      birth_date:
        description: Дата рождения
        example: "1980-05-15T00:00:00Z"
        type: string
      full_name:
        description: ФИО пациента
        example: Смирнов Алексей Петрович
        type: string
      id:
        description: ID пациента
        type: integer
      is_male:
        description: Пол (true - мужской)
        example: true
        type: boolean
    type: object
  models.UpdateDoctorRequest:
    description: Используется для изменения информации о враче
    properties:
      full_name:
        example: Иванов Иван Иванович
        type: string
      id:
        example: 1
        type: integer
      login:
        example: "+79123456789"
        type: string
      specialization_id:
        example: 1
        type: integer
    type: object
  models.UpdateMedCardRequest:
    description: Содержит всю медицинскую информацию о пациенте
    properties:
      allergy:
        description: Список аллергий
        items:
          $ref: '#/definitions/models.AllergyResponse'
        type: array
      contact_info:
        allOf:
        - $ref: '#/definitions/models.ContactInfoResponse'
        description: Контактные данные
      patient:
        allOf:
        - $ref: '#/definitions/models.ShortPatientResponse'
        description: Основные данные пациента
      personal_info:
        allOf:
        - $ref: '#/definitions/models.PersonalInfoResponse'
        description: Персональная информация
    type: object
  models.UpdateReceptionHospitalRequest:
    properties:
      diagnosis:
        example: Грипп
        type: string
      id:
        type: integer
      recommendations:
        example: Постельный режим
        type: string
      status:
        allOf:
        - $ref: '#/definitions/entities.ReceptionStatus'
        example: scheduled
    type: object
  models.UpdateSmpReceptionRequest:
    properties:
      diagnosis:
        example: ОРВИ
        type: string
      doctor_id:
        example: 1
        type: integer
      emergency_call_id:
        example: 1
        type: integer
      med_services:
        items:
          $ref: '#/definitions/entities.MedService'
        type: array
      patient_id:
        example: 1
        type: integer
      reception_smp_id:
        example: 1
        type: integer
      recommendations:
        example: Постельный режим
        type: string
    required:
    - doctor_id
    - emergency_call_id
    - patient_id
    - reception_smp_id
    type: object
host: localhost:8080
info:
  contact:
    email: support@example.com
    name: API Support
  description: API для работы с приёмами пациентов
  title: ClinicHub API
  version: 1.0.0
paths:
  /auth:
    post:
      consumes:
      - application/json
      description: Аутентифицирует врача по номеру телефона и паролю
      parameters:
      - description: Данные для входа
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.DoctorLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Успешное создание
          schema:
            $ref: '#/definitions/models.DoctorAuthResponse'
        "400":
          description: Неверный формат запроса
          schema:
            $ref: '#/definitions/handlers.IncorrectFormatError'
        "401":
          description: Неверные учётные данные
          schema:
            $ref: '#/definitions/handlers.IncorrectDataError'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/handlers.InternalServerError'
      summary: Вход в систему
      tags:
      - Auth
  /doctors/{doc_id}:
    get:
      consumes:
      - application/json
      description: Возвращает данные врача по ID
      parameters:
      - description: ID врача
        in: path
        name: doc_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Данные врача
          schema:
            $ref: '#/definitions/entities.Doctor'
        "400":
          description: Некорректный ID
          schema:
            $ref: '#/definitions/handlers.IncorrectDataError'
        "404":
          description: Врач не найден
          schema:
            $ref: '#/definitions/handlers.NotFoundError'
        "500":
          description: Внутренняя ошибка
          schema:
            $ref: '#/definitions/handlers.InternalServerError'
      summary: Получить врача по ID
      tags:
      - Doctor
    put:
      consumes:
      - application/json
      description: Обновляет информацию о враче
      parameters:
      - description: Данные для обновления
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/models.UpdateDoctorRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Обновленный врач
          schema:
            $ref: '#/definitions/entities.Doctor'
        "400":
          description: Некорректный запрос
          schema:
            $ref: '#/definitions/handlers.IncorrectFormatError'
        "404":
          description: Врач не найден
          schema:
            $ref: '#/definitions/handlers.NotFoundError'
        "422":
          description: Ошибка валидации
          schema:
            $ref: '#/definitions/handlers.ValidationError'
        "500":
          description: Внутренняя ошибка
          schema:
            $ref: '#/definitions/handlers.InternalServerError'
      summary: Обновить данные врача
      tags:
      - Doctor
  /emergency/{doctor_id}:
    get:
      consumes:
      - application/json
      description: Возвращает список экстренных приёмов, назначенных врачу на указанную
        дату, с пагинацией
      parameters:
      - description: ID врача
        in: path
        name: doctor_id
        required: true
        type: integer
      - description: Дата в формате YYYY-MM-DD
        in: query
        name: date
        type: string
      - default: 1
        description: Номер страницы
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Список приёмов
          schema:
            items:
              $ref: '#/definitions/entities.EmergencyCall'
            type: array
        "400":
          description: Некорректный запрос
          schema:
            $ref: '#/definitions/handlers.IncorrectFormatError'
        "500":
          description: Внутренняя ошибка
          schema:
            $ref: '#/definitions/handlers.InternalServerError'
      summary: Получить экстренные приёмы врача по дате
      tags:
      - SMP
  /emergency/{doctor_id}/{recep_id}:
    get:
      consumes:
      - application/json
      description: Возвращает список приёмов скорой медицинской помощи для указанного
        врача с пагинацией
      parameters:
      - description: ID врача
        in: path
        name: doctor_id
        required: true
        type: integer
      - default: 1
        description: Номер страницы
        in: query
        name: page
        type: integer
      - default: 5
        description: Количество записей на страницу
        in: query
        name: perPage
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Информация о приёме скорой помощи
          schema:
            items:
              $ref: '#/definitions/entities.ReceptionSMP'
            type: array
        "400":
          description: Неверный формат запроса
          schema:
            $ref: '#/definitions/handlers.IncorrectFormatError'
        "401":
          description: Некорректный ID вызова
          schema:
            $ref: '#/definitions/handlers.IncorrectDataError'
        "422":
          description: Ошибка валидации
          schema:
            $ref: '#/definitions/handlers.ValidationError'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/handlers.InternalServerError'
      summary: Получить СМП приёмы врача по дате
      tags:
      - SMP
  /emergency/{doctor_id}/{recep_id}/{smp_id}:
    get:
      consumes:
      - application/json
      description: Возвращает информацию о приёме скорой медицинской помощи вместе
        со списком медицинских услуг
      parameters:
      - description: ID приёма СМП
        in: path
        name: smp_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Информация о приёме и медуслугах
          schema:
            $ref: '#/definitions/entities.MedService'
        "400":
          description: Неверный формат запроса
          schema:
            $ref: '#/definitions/handlers.IncorrectFormatError'
        "401":
          description: Некорректный ID вызова
          schema:
            $ref: '#/definitions/handlers.IncorrectDataError'
        "422":
          description: Ошибка валидации
          schema:
            $ref: '#/definitions/handlers.ValidationError'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/handlers.InternalServerError'
      summary: Получить приём СМП с медуслугами по ID
      tags:
      - SMP
  /emergency/receptions:
    post:
      consumes:
      - application/json
      description: Возвращает созданное заключение
      parameters:
      - description: Данные для создания заключения
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.CreateEmergencyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Создание заключения для пациента
          schema:
            $ref: '#/definitions/entities.ReceptionSMP'
        "400":
          description: Неверный формат запроса
          schema:
            $ref: '#/definitions/handlers.IncorrectFormatError'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/handlers.InternalServerError'
      summary: Создать заключение на скорой
      tags:
      - SMP
  /emergency/receptions/{recep_id}:
    put:
      consumes:
      - application/json
      description: Обновляет информацию о приёvе в больнице
      parameters:
      - description: ID приёма
        in: path
        name: recep_id
        required: true
        type: integer
      - description: Данные для обновления
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/models.UpdateSmpReceptionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entities.ReceptionHospital'
            type: array
        "400":
          description: Неверный формат запроса
          schema:
            $ref: '#/definitions/handlers.IncorrectFormatError'
        "401":
          description: Некорректный ID приёма
          schema:
            $ref: '#/definitions/handlers.IncorrectDataError'
        "422":
          description: Ошибка валидации
          schema:
            $ref: '#/definitions/handlers.ValidationError'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/handlers.InternalServerError'
      summary: Обновить приём в больнице
      tags:
      - SMP
  /hospital/receptions/{doc_id}:
    get:
      consumes:
      - application/json
      description: |-
        История приёмов пациентов у конкретного врача в больнице. Если `doctor_id` = 0, возвращаются все приёмы всех врачей.
        По умолчанию сортировка по статусу - "Запланирован" и дате приема.
      parameters:
      - description: ID врача
        in: path
        name: doc_id
        required: true
        type: integer
      - description: |-
          Номер страницы
          (по умолчанию 1)
        in: query
        name: page
        type: integer
      - description: |-
          Количество записей на странице
          (по умолчанию 0 — без ограничения)
        in: query
        name: count
        type: integer
      - description: |-
          Фильтр в формате field.operation.value.
          Примеры:
          recommendations.like.режим - поле с подстрокой 'режим',
          date.eq.2025-07-10 - фильтр по дате
          date.eq.14:00:00 - фильтр по времени
        in: query
        name: filter
        type: string
      - description: |-
          Сортировка в формате field.direction.
          Примеры:
          date.desc - по убыванию даты,
          id.asc - по возрастанию id
        in: query
        name: order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: История приёмов врача списком
          schema:
            $ref: '#/definitions/models.ReceptionHospitalListResponse'
        "400":
          description: Неверный формат запроса
          schema:
            $ref: '#/definitions/handlers.IncorrectFormatError'
        "401":
          description: Некорректный ID доктора
          schema:
            $ref: '#/definitions/handlers.IncorrectDataError'
        "422":
          description: Ошибка валидации
          schema:
            $ref: '#/definitions/handlers.ValidationError'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/handlers.InternalServerError'
      summary: Получить список приёмов врача по его ID
      tags:
      - HospitalReception
  /hospital/receptions/{recep_id}:
    put:
      consumes:
      - application/json
      description: Обновляет информацию о приёме в больнице по его ID
      parameters:
      - description: ID приёма
        in: path
        name: recep_id
        required: true
        type: integer
      - description: Данные для обновления приёма
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/models.UpdateReceptionHospitalRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Обновлённый приём
          schema:
            $ref: '#/definitions/entities.ReceptionHospital'
        "400":
          description: Неверный формат запроса
          schema:
            $ref: '#/definitions/handlers.IncorrectFormatError'
        "401":
          description: Некорректный ID приёма
          schema:
            $ref: '#/definitions/handlers.IncorrectDataError'
        "422":
          description: Ошибка валидации
          schema:
            $ref: '#/definitions/handlers.ValidationError'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/handlers.InternalServerError'
      summary: Обновить приём в больнице
      tags:
      - HospitalReception
  /hospital/receptions/patients/{pat_id}:
    get:
      consumes:
      - application/json
      description: История приемов пациента в больнице
      parameters:
      - description: ID пациента
        in: path
        name: pat_id
        required: true
        type: integer
      - description: |-
          Номер страницы
          (по умолчанию 1)
        in: query
        name: page
        type: integer
      - description: |-
          Количество записей на странице
          (по умолчанию 0 — без ограничения)
        in: query
        name: count
        type: integer
      - description: |-
          Фильтр в формате field.operation.value.
          Примеры:
          recommendations.like.режим - поле с подстрокой 'режим',
          date.eq.2025-07-10 - фильтр по дате
          date.eq.14:00:00 - фильтр по времени
        in: query
        name: filter
        type: string
      - description: |-
          Сортировка в формате field.direction.
          Примеры:
          date.desc - по убыванию даты,
          id.asc - по возрастанию id
        in: query
        name: order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: История приёмов списком
          schema:
            $ref: '#/definitions/models.ReceptionHospitalListResponse'
        "400":
          description: Неверный формат запроса
          schema:
            $ref: '#/definitions/handlers.IncorrectFormatError'
        "401":
          description: Некорректный ID пациента
          schema:
            $ref: '#/definitions/handlers.IncorrectDataError'
        "422":
          description: Ошибка валидации
          schema:
            $ref: '#/definitions/handlers.ValidationError'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/handlers.InternalServerError'
      summary: Получить список приёмов пациента по его ID
      tags:
      - HospitalReception
  /medcard/{pat_id}:
    get:
      consumes:
      - application/json
      description: Возвращает полную информацию из медицинской карты пациента
      parameters:
      - description: ID пациента
        in: path
        name: pat_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Медицинская карта пациента
          schema:
            $ref: '#/definitions/models.MedCardResponse'
        "400":
          description: Некорректный запрос
          schema:
            $ref: '#/definitions/handlers.IncorrectFormatError'
        "401":
          description: Некорректный ID пациента
          schema:
            $ref: '#/definitions/handlers.IncorrectDataError'
        "404":
          description: Медицинская карта не найдена
          schema:
            $ref: '#/definitions/handlers.NotFoundError'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/handlers.InternalServerError'
      summary: Получить медкарту пациента по его ID
      tags:
      - Medcard
    put:
      consumes:
      - application/json
      description: Обновляет данные в медицинской карте по ID пациента
      parameters:
      - description: ID пациента
        in: path
        name: pat_id
        required: true
        type: integer
      - description: Данные для обновления мед карты
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.UpdateMedCardRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Обновлённая медицинская карта
          schema:
            $ref: '#/definitions/models.MedCardResponse'
        "400":
          description: Некорректный запрос
          schema:
            $ref: '#/definitions/handlers.IncorrectFormatError'
        "404":
          description: Медицинская карта не найдена
          schema:
            $ref: '#/definitions/handlers.NotFoundError'
        "422":
          description: Ошибка валидации
          schema:
            $ref: '#/definitions/handlers.ValidationError'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/handlers.InternalServerError'
      summary: Обновить медицинскую карту пациента
      tags:
      - Medcard
  /medservices/:
    get:
      consumes:
      - application/json
      description: Возвращает список платных услуг
      produces:
      - application/json
      responses:
        "200":
          description: Медицинская карта пациента
          schema:
            $ref: '#/definitions/models.MedServicesListResponse'
        "400":
          description: Некорректный запрос
          schema:
            $ref: '#/definitions/handlers.IncorrectFormatError'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/handlers.InternalServerError'
      summary: Получить все доступные платные услуги
      tags:
      - MedServices
  /patients:
    post:
      consumes:
      - application/json
      description: Создает нового пациента с персональными и контактными данными
      parameters:
      - description: Данные пациента
        in: body
        name: info
        required: true
        schema:
          $ref: '#/definitions/models.CreatePatientRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Созданный пациент
          schema:
            $ref: '#/definitions/entities.Patient'
        "400":
          description: Неверный формат запроса
          schema:
            $ref: '#/definitions/handlers.IncorrectFormatError'
        "422":
          description: Ошибка валидации
          schema:
            $ref: '#/definitions/handlers.ValidationError'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/handlers.InternalServerError'
      summary: Создать нового пациента
      tags:
      - Patient
  /patients/{doc_id}:
    get:
      consumes:
      - application/json
      description: Возвращает список всех пациентов, привязанных к указанному врачу
      parameters:
      - description: ID врача
        in: path
        name: doc_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Список пациентов
          schema:
            allOf:
            - $ref: '#/definitions/handlers.ResultResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/entities.Patient'
                  type: array
              type: object
        "401":
          description: Некорректный ID врача
          schema:
            $ref: '#/definitions/handlers.IncorrectDataError'
        "404":
          description: Врач не найден
          schema:
            $ref: '#/definitions/handlers.NotFoundError'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/handlers.InternalServerError'
      summary: Получить всех пациентов по ID врача
      tags:
      - Patient
swagger: "2.0"
